<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.springframework.ide.eclipse.beans.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.springframework.ide.eclipse.beans.core" id="postprocessors" name="Post Processors"/>
      </appinfo>
      <documentation>
         &lt;p&gt;
This extension point is used to add post processors that re-implement functionality normally implemented by &lt;code&gt;org.springframework.beans.factory.config.BeanPostProcessor&lt;/code&gt; or &lt;code&gt;org.springframework.beans.factory.config.BeanFactoryPostProcessor&lt;/code&gt;.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="postprocessor" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully-qualified name of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional id
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="postprocessor">
      <complexType>
         <attribute name="type" type="string">
            <annotation>
               <documentation>
                  the full qualified class name of the corresponding postprocessor, e.g. &lt;code&gt;org.springframework.beans.factory.config.BeanPostProcessor&lt;/code&gt;
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  an implementation of the interface &lt;code&gt;org.springframework.ide.eclipse.beans.core.model.postprocess.IBeansConfigPostProcessor&lt;/code&gt;
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="org.springframework.ide.eclipse.beans.core.model.postprocess.IBeansConfigPostProcessor"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         2.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         &lt;pre&gt;
&lt;extension point=&quot;org.springframework.ide.eclipse.beans.core.postprocessors&quot;&gt;
   &lt;postprocessor
      type=&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;
      class=&quot;&quot;/&gt;  
&lt;/extension&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiInfo"/>
      </appinfo>
      <documentation>
         &lt;p&gt;
Each post processor must supply a public, no-argument constructor and implement the interface &lt;samp&gt;org.springframework.ide.eclipse.beans.core.model.postprocess.IBeansConfigPostProcessor&lt;/samp&gt;.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         &lt;p&gt;
This plugin itself comes with a set of predefined namespace contributions.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         &lt;pre&gt;
Copyright (c) 2005, 2007 Spring IDE Developers
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-v10.html
 
Contributors:
    Spring IDE Developers - initial API and implementation
&lt;/pre&gt;
      </documentation>
   </annotation>

</schema>
