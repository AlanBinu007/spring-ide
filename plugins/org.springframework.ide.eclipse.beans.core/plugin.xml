<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<!--
/*******************************************************************************
 * Copyright (c) 2005, 2013 Spring IDE Developers
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Spring IDE Developers - initial API and implementation
 *******************************************************************************/
 -->
<plugin>

	<extension-point id="namespaces" name="%extensionNamespaces.name"
		schema="schema/namespaces.exsd" />

	<extension-point id="postprocessors" name="%extensionPostProcessors.name"
		schema="schema/postprocessors.exsd" />

	<extension-point id="resolvers" name="%extensionResolvers.name"
		schema="schema/resolvers.exsd" />

	<extension-point id="beansconfiglocators" name="%extensionBeanconfiglocators.name"
		schema="schema/beansconfiglocators.exsd" />

	<extension point="org.eclipse.core.resources.markers"
			id="problemmarker"
			name="%beansProblemMarker">
		<super type="org.springframework.ide.eclipse.core.problemmarker" />
		<attribute name="ruleId"/>
		<attribute name="errorId"/>
		<persistent value="true" />
	</extension>

	<extension point="org.eclipse.ui.ide.markerSupport">
		<markerTypeCategory name="%markerCategory.name">
			<markerTypeReference id="org.springframework.ide.eclipse.beans.core.problemmarker"/>
		</markerTypeCategory>
	</extension>

	<extension point="org.eclipse.core.expressions.propertyTesters">
		<propertyTester
			class="org.springframework.ide.eclipse.beans.core.internal.model.BeansModelPropertyTester"
			id="org.springframework.ide.eclipse.beans.core.beansModelTester"
			namespace="org.springframework.ide.eclipse.beans.core.model"
			properties="isBeansConfig, isInfrstructureBean, canAddToConfigSet, isEmptyConfigSet" 
			type="java.lang.Object" />
	</extension>
	
	<extension point="org.eclipse.ui.elementFactories">
		<factory id="org.springframework.ide.eclipse.beans.core.factoryId"
			class="org.springframework.ide.eclipse.beans.core.internal.model.BeansModelElementFactory" />      
	</extension>
 
	 <extension
	       point="org.springframework.ide.eclipse.core.validators">
	    <validator id="beansvalidator"
	          class="org.springframework.ide.eclipse.beans.core.internal.model.validation.BeansConfigValidator"
	          name="%beansValidator.name"
	          description="%beansValidator.description"
			  icon="icons/full/obj16/bean_obj.gif"
			  markerId="problemmarker"
			  enabledByDefault="true" 
			  order="20" />
	    <rules validatorId="org.springframework.ide.eclipse.beans.core.beansvalidator">
		    <rule id="beanAlias"
		            class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.BeanAliasRule"
		            name="%beansValidator.rule.beanAlias.name"
		            description="%beansValidator.rule.beanAlias.description" >
	            <message id="BEAN_OVERRIDE" label="Overrides another bean" severity="ERROR" />
	            <message id="ALIAS_OVERRIDE" label="Overrides another alias" severity="ERROR" />
	            <message id="UNDEFINED_REFERENCED_BEAN" label="Referenced bean not found" severity="WARNING" />
		    </rule>
		    <rule id="beanDefinitionHolder"
		            class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.BeanDefinitionHolderRule"
		            name="%beansValidator.rule.beanDefinitionHolder.name"
		            description="%beansValidator.rule.beanDefinitionHolder.description" >
	            <message id="BEAN_OVERRIDE" label="Overrides another bean" severity="ERROR" />
	            <message id="INVALID_ALIAS" label="Invalid alias" severity="ERROR" />
		    </rule>
		    <rule id="beanDefinition"
		            class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.BeanDefinitionRule"
		            name="%beansValidator.rule.beanDefinition.name"
		            description="%beansValidator.rule.beanDefinition.description" >
   	            <message id="INVALID_BEAN_DEFINITION" label="Invalid bean definition" severity="ERROR" />
		    </rule>
		    <rule id="beanDefinition"
		            class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.BeanDeprecationRule"
		            name="%beansValidator.rule.beanDeprecation.name"
		            description="%beansValidator.rule.beanDeprecation.description" >
   	            <message id="CLASS_IS_DEPRECATED" label="Deprecated class" severity="WARNING" />
   	            <message id="METHOD_IS_DEPRECATED" label="Deprecated method" severity="WARNING" />
		    </rule>
		    <rule id="beanClass"
            		class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.BeanClassRule"
            		description="%beansValidator.rule.beanClass.description"
            		name="%beansValidator.rule.beanClass.name">
	         	<property
	               	description="Bean classes that should get ignored during validation (separate values with comma)"
	               	name="ignorableClasses"
	               	value="org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor, org.springframework.osgi.config.internal.OsgiServiceLifecycleListenerAdapter, org.springframework.osgi.service.importer.support.OsgiServiceProxyFactoryBean, org.springframework.osgi.service.importer.support.OsgiServiceCollectionProxyFactoryBean, org.springframework.osgi.service.exporter.support.OsgiServiceFactoryBean, org.springframework.osgi.config.OsgiServiceRegistrationListenerAdapter">
	            </property>
	            <message id="CLASS_NOT_CLASS" label="Class is interface" severity="WARNING" />
	            <message id="CLASS_NOT_FOUND" label="Class not found" severity="ERROR" />
           <message
                 id="CLASS_NOT_CONCRETE"
                 label="Class is abstract"
                 severity="WARNING">
           </message>
     	    </rule>
		    <rule id="toolAnnotation"
            		class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.NamespaceElementsRule"
            		description="%beansValidator.rule.toolAnnotation.description"
            		name="%beansValidator.rule.toolAnnotation.name"
            		enabledByDefault="false">
	         	<property
	               	description="Bean classes that should get ignored during validation (separate values with comma)"
	               	name="ignorableClasses"
	               	value="org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor, org.springframework.osgi.config.internal.OsgiServiceLifecycleListenerAdapter, org.springframework.osgi.service.importer.support.OsgiServiceProxyFactoryBean, org.springframework.osgi.service.importer.support.OsgiServiceCollectionProxyFactoryBean, org.springframework.osgi.service.exporter.support.OsgiServiceFactoryBean, org.springframework.osgi.config.OsgiServiceRegistrationListenerAdapter">
	            </property>
	         	<property
	               	description="Bean names that should get ignored during validation (separate values with comma)"
	               	name="ignorableBeans"
	               	value="bundleContext">
	            </property>
   	            <message id="CLASS_NOT_FOUND" label="Class not found" severity="ERROR" />
   	            <message id="METHOD_NOT_FOUND" label="Method not found" severity="ERROR" />
   	            <message id="CLASS_IS_NOT_IN_HIERACHY" label="Class not sub-type" severity="ERROR" />
   	            <message id="CLASS_IS_INTERFACE" label="Class is interface" severity="ERROR" />
   	            <message id="CLASS_IS_INTERFACE" label="Class is not interface" severity="ERROR" />
   	            <message id="UNDEFINED_REFERENCED_BEAN" label="Referenced bean not found" severity="WARNING" />
   	            <message id="FIELD_NOT_FOUND" label="Field not found" severity="ERROR" />
   	            <message id="FIELD_NOT_STATIC" label="Field is not static" severity="ERROR" />
		    </rule>
		    <rule id="beanInitDestroyMethod"
		            class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.BeanInitDestroyMethodRule"
		            name="%beansValidator.rule.beanInitDestroyMethod.name"
		            description="%beansValidator.rule.beanInitDestroyMethod.description" >
   	            <message id="UNDEFINED_FACTORY_BEAN_METHOD" label="Factory method not found" severity="ERROR" />
   	            <message id="UNDEFINED_INIT_METHOD" label="Init method not found" severity="ERROR" />
   	            <message id="UNDEFINED_DESTROY_METHOD" label="Destroy method not found" severity="ERROR" />
		    </rule>
		    <rule id="beanFactory"
		            class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.BeanFactoryRule"
		            name="%beansValidator.rule.beanFactory.name"
		            description="%beansValidator.rule.beanFactory.description" >
   	            <message id="NO_FACTORY_METHOD" label="No factory method" severity="ERROR" />
   	            <message id="INVALID_FACTORY_BEAN" label="Factory bean invalid" severity="ERROR" />
   	            <message id="UNDEFINED_FACTORY_BEAN" label="Factory bean not found" severity="ERROR" />
   	            <message id="UNDEFINED_FACTORY_BEAN_METHOD" label="Factory method not found" severity="ERROR" />
   	            <message id="UNDEFINED_INIT_METHOD" label="Init method not found" severity="ERROR" />
   	            <message id="UNDEFINED_DESTROY_METHOD" label="Destroy method not found" severity="ERROR" />
		    </rule>
		    <rule id="beanConstructorArgument"
		            class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.BeanConstructorArgumentRule"
		            name="%beansValidator.rule.beanConstructorArgument.name"
		            description="%beansValidator.rule.beanConstructorArgument.description" >
   	            <message id="NO_CONSTRUCTOR" label="Constructor not found" severity="ERROR" />
		    </rule>
		    <rule id="beanProperty"
		            class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.BeanPropertyRule"
		            name="%beansValidator.rule.beanProperty.name"
		            description="%beansValidator.rule.beanProperty.description" >
   	            <message id="NO_GETTER" label="No getter found" severity="ERROR" />
   	            <message id="INVALID_PROPERTY_NAME" label="Invalid property name" severity="ERROR" />
   	            <message id="NO_SETTER" label="No setter found" severity="ERROR" />
		    </rule>
		    <rule id="beanReference"
		            class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.BeanReferenceRule"
		            name="%beansValidator.rule.beanReference.name"
		            description="%beansValidator.rule.beanReference.description" >
   	         	<property
	               	description="Bean names that should get ignored during validation (separate values with comma)"
	               	name="ignorableBeans"
	               	value="bundleContext">
	            </property>
   	            <message id="UNDEFINED_PARENT_BEAN" label="Parent bean not found" severity="WARNING" />
   	            <message id="INVALID_DEPENDS_ON_BEAN" label="Invalid dependent bean" severity="ERROR" />
   	            <message id="INVALID_REFERENCED_BEAN" label="Invalid referenced bean" severity="ERROR" />
   	            <message id="INVALID_FACTORY_BEAN" label="Invalid factory bean" severity="ERROR" />
   	            <message id="UNDEFINED_FACTORY_BEAN" label="Factory bean not found" severity="WARNING" />
   	            <message id="UNDEFINED_REFERENCED_BEAN" label="Referenced bean not found" severity="WARNING" />
		    </rule>
		    <rule id="requiredProperty"
		            class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.RequiredPropertyRule"
		            name="%beansValidator.rule.requiredProperty.name"
		            description="%beansValidator.rule.requiredProperty.description"
		            enabledByDefault="false" >
   	            <message id="REQUIRED_PROPERTY_MISSING" label="Required property missing" severity="WARNING" />
		    </rule>
		    <rule id="parsingProblems"
		            class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.SpringParsingProblemsRule"
		            name="%beansValidator.rule.parsingProblems.name"
		            description="%beansValidator.rule.parsingProblems.description" />
		    <rule id="methodOverride"
		            class="org.springframework.ide.eclipse.beans.core.internal.model.validation.rules.BeanMethodOverrideRule"
		            name="%beansValidator.rule.methodOverride.name"
		            description="%beansValidator.rule.methodOverride.description" >
   	            <message id="UNDEFINED_REPLACE_METHOD" label="Replace method not found" severity="ERROR" />
   	            <message id="UNDEFINED_LOOKUP_METHOD" label="Lookup method not found" severity="ERROR" />
		    </rule>
	    </rules>
	</extension>
  
    <extension
          point="org.springframework.ide.eclipse.core.listeners">
       <listener
             class="org.springframework.ide.eclipse.beans.core.internal.model.validation.BeansConfigReloadingProjectContributionEventListener">
       </listener>
       <listener
             class="org.springframework.ide.eclipse.beans.core.internal.model.validation.BeansTypeHierachyProjectContributionEventListener">
       </listener>
    </extension>
    
    <extension
          point="org.eclipse.wst.common.uriresolver.resolverExtensions">
       <resolverExtension
             class="org.springframework.ide.eclipse.beans.core.internal.model.namespaces.ProjectClasspathExtensibleUriResolver"
             priority="high"
             stage="postnormalization">
<!--          <projectNature
                value="org.springframework.ide.eclipse.core.springnature">
          </projectNature> -->
       </resolverExtension>
    </extension>

<!--   
    <extension
          point="org.eclipse.wst.common.uriresolver.resolverExtensions">
       <resolverExtension
             class="org.springframework.ide.eclipse.beans.core.internal.model.namespaces.ProjectClasspathExtensibleUriPhysicalLocationResolver"
             priority="high"
             stage="physical">
         <projectNature
                value="org.springframework.ide.eclipse.core.springnature">
          </projectNature>
       </resolverExtension>
    </extension>
-->
    <extension
          point="org.springframework.ide.eclipse.beans.core.beansconfiglocators">
       <beansConfigLocator
             class="org.springframework.ide.eclipse.beans.core.model.locate.ProjectScanningJavaConfigLocator"
             description="Detects Spring configurations from Java files annotated with @Configuration, @Component, @Bean or @Import"
             enabledByDefault="false"
             id="annotatedJavaConfigLocator"
             name="Auto detection for annotated Java Spring configuration files"
             order="6">
       </beansConfigLocator>
       <beansConfigLocator
             class="org.springframework.ide.eclipse.beans.core.model.locate.AutoConfigurationJavaConfigLocator"
             description="Detects Spring configurations from Java files annotated with @EnableAutoConfiguration"
             enabledByDefault="true"
             id="bootJavaConfigLocator"
             name="Auto detection for Spring Boot configuration files"
             order="5">
       </beansConfigLocator>
    </extension>

</plugin>
