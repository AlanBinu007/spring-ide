/*******************************************************************************
 *  Copyright (c) 2013 VMware, Inc.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  https://www.eclipse.org/legal/epl-v10.html
 *
 *  Contributors:
 *      VMware, Inc. - initial API and implementation
 *******************************************************************************/
package org.springframework.ide.eclipse.wizard.template;

import org.eclipse.jface.resource.ImageDescriptor;
import org.springframework.ide.eclipse.wizard.template.infrastructure.Template;
import org.springsource.ide.eclipse.commons.content.core.ContentItem;

/**
 * The purpose of the subclass is to allow simple projects that are not truly
 * templates, to be treated as templates at the UI level (for example, to be
 * displayed in the template selection viewer). However, unlike templates that
 * always contribute a wizard page that is generated by the template properties,
 * simple projects either may not contribute wizard pages, or contribute wizard
 * pages unrelated to template properties, like in the case of a simple Java
 * project,that uses JDT wizard pages.
 * 
 * 
 */
public class SimpleProject extends Template {

	private final boolean hasWizardPages;

	public SimpleProject(ContentItem item, ImageDescriptor icon, boolean hasWizardPages) {
		super(item, icon);
		this.hasWizardPages = hasWizardPages;
	}

	/**
	 * @return True if the simple project contributes additional pages NOT
	 * related to template properties to the wizard. False otherwise.
	 */
	public boolean hasWizardPages() {
		return hasWizardPages;
	}

}
