//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="https://java.sun.com/xml/jaxb">https://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.05 at 05:47:27 PM CET 
//

package org.springframework.ide.eclipse.osgi.blueprint.internal.jaxb;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlType;

import org.w3c.dom.Element;

/**
 * 
 * 
 * The type used for the <type-converters> element. The
 * <type-converters> section is a set of <bean>, <ref>, or <reference> elements
 * that identify the type converter components.
 * 
 * 
 * 
 * <p>
 * Java class for Ttype-converters complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="Ttype-converters">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="bean" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tbean"/>
 *         &lt;element name="reference" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Treference"/>
 *         &lt;element name="ref" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tref"/>
 *         &lt;any processContents='lax' namespace='##other'/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Ttype-converters", propOrder = { "beanOrReferenceOrRef" })
public class TtypeConverters {

	@XmlElementRefs({
			@XmlElementRef(name = "reference", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", type = JAXBElement.class, required = false),
			@XmlElementRef(name = "bean", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", type = JAXBElement.class, required = false),
			@XmlElementRef(name = "ref", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", type = JAXBElement.class, required = false) })
	@XmlAnyElement(lax = true)
	protected List<Object> beanOrReferenceOrRef;

	/**
	 * Gets the value of the beanOrReferenceOrRef property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the beanOrReferenceOrRef property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getBeanOrReferenceOrRef().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list {@link Object }
	 * {@link JAXBElement }{@code <}{@link Tref }{@code >} {@link JAXBElement }
	 * {@code <}{@link Treference }{@code >} {@link JAXBElement }{@code <}
	 * {@link Tbean }{@code >} {@link Element }
	 * 
	 * 
	 */
	public List<Object> getBeanOrReferenceOrRef() {
		if (beanOrReferenceOrRef == null) {
			beanOrReferenceOrRef = new ArrayList<Object>();
		}
		return this.beanOrReferenceOrRef;
	}

}
