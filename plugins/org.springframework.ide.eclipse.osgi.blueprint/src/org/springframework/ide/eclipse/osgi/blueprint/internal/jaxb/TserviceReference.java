//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.05 at 05:47:27 PM CET 
//

package org.springframework.ide.eclipse.osgi.blueprint.internal.jaxb;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;

/**
 * 
 * 
 * TserviceReference is the base element type used for <reference> and
 * <reference-list> elements. This type defines all of the characteristics
 * common to both sorts of references.
 * 
 * 
 * 
 * <p>
 * Java class for TserviceReference complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="TserviceReference">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tcomponent">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.osgi.org/xmlns/blueprint/v1.0.0}GserviceReferenceElements"/>
 *       &lt;/sequence>
 *       &lt;attribute name="interface" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tclass" />
 *       &lt;attribute name="filter" type="{http://www.w3.org/2001/XMLSchema}normalizedString" />
 *       &lt;attribute name="component-name" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tidref" />
 *       &lt;attribute name="availability" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tavailability" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TserviceReference", propOrder = { "description", "referenceListener" })
@XmlSeeAlso({ Treference.class, TreferenceList.class })
public class TserviceReference extends Tcomponent {

	protected Tdescription description;
	@XmlElement(name = "reference-listener")
	protected List<TreferenceListener> referenceListener;
	@XmlAttribute(name = "interface")
	@XmlJavaTypeAdapter(CollapsedStringAdapter.class)
	protected String _interface;
	@XmlAttribute(name = "filter")
	@XmlJavaTypeAdapter(NormalizedStringAdapter.class)
	@XmlSchemaType(name = "normalizedString")
	protected String filter;
	@XmlAttribute(name = "component-name")
	@XmlJavaTypeAdapter(CollapsedStringAdapter.class)
	protected String componentName;
	@XmlAttribute(name = "availability")
	protected Tavailability availability;
	@XmlAnyAttribute
	private Map<QName, String> otherAttributes = new HashMap<QName, String>();

	/**
	 * Gets the value of the description property.
	 * 
	 * @return possible object is {@link Tdescription }
	 * 
	 */
	public Tdescription getDescription() {
		return description;
	}

	/**
	 * Sets the value of the description property.
	 * 
	 * @param value
	 *            allowed object is {@link Tdescription }
	 * 
	 */
	public void setDescription(Tdescription value) {
		this.description = value;
	}

	/**
	 * Gets the value of the referenceListener property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the referenceListener property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getReferenceListener().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link TreferenceListener }
	 * 
	 * 
	 */
	public List<TreferenceListener> getReferenceListener() {
		if (referenceListener == null) {
			referenceListener = new ArrayList<TreferenceListener>();
		}
		return this.referenceListener;
	}

	/**
	 * Gets the value of the interface property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getInterface() {
		return _interface;
	}

	/**
	 * Sets the value of the interface property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setInterface(String value) {
		this._interface = value;
	}

	/**
	 * Gets the value of the filter property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getFilter() {
		return filter;
	}

	/**
	 * Sets the value of the filter property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setFilter(String value) {
		this.filter = value;
	}

	/**
	 * Gets the value of the componentName property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getComponentName() {
		return componentName;
	}

	/**
	 * Sets the value of the componentName property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setComponentName(String value) {
		this.componentName = value;
	}

	/**
	 * Gets the value of the availability property.
	 * 
	 * @return possible object is {@link Tavailability }
	 * 
	 */
	public Tavailability getAvailability() {
		return availability;
	}

	/**
	 * Sets the value of the availability property.
	 * 
	 * @param value
	 *            allowed object is {@link Tavailability }
	 * 
	 */
	public void setAvailability(Tavailability value) {
		this.availability = value;
	}

	/**
	 * Gets a map that contains attributes that aren't bound to any typed
	 * property on this class.
	 * 
	 * <p>
	 * the map is keyed by the name of the attribute and the value is the string
	 * value of the attribute.
	 * 
	 * the map returned by this method is live, and you can add new attribute by
	 * updating the map directly. Because of this design, there's no setter.
	 * 
	 * 
	 * @return always non-null
	 */
	public Map<QName, String> getOtherAttributes() {
		return otherAttributes;
	}

}
